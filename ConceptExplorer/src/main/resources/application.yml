spring:
 application:
  name: ConceptExplorer
 kafka:
  bootstrap-servers: localhost:9092
  consumer:
    group-id: my-group
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

resilience4j:
  circuitbreaker:
    instances:
      apiCircuitBreaker:
        register-health-indicator: true
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s

  retry:
    instances:
      apiRetry:
        max-attempts: 3
        wait-duration: 1s

  ratelimiter:
    instances:
      apiRateLimiter:
        limit-for-period: 100
        limit-refresh-period: 1s
        timeout-duration: 500ms

  bulkhead:
    instances:
      apiBulkhead:
        max-concurrent-calls: 10
        max-wait-duration: 100ms

  timelimiter:
    instances:
      apiTimeLimiter:
        timeout-duration: 3s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# management.endpoints == Actuator for monitoring
# spring.kafka == For Event driven architecture